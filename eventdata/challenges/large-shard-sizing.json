{% set p_bulk_indexing_clients = (bulk_indexing_clients | default(32)) %}
{% set p_ops_per_25gb = (ops_per_25_gb | default(120000)) %}
{% set p_query_iterations = (query_iterations | default(10)) %}
{% set p_ops_per_client = (p_ops_per_25gb / p_bulk_indexing_clients) | int %}

{
  "name": "large-shard-sizing",
  "description": "Index data into a single shard ~25Gb at a time (up to a total of ~300GB), then record index statistics and run a number of queries against the shard. IDs are autogenerated by Elasticsearch, meaning there are no conflicts.",
  "meta": {
    "client_count": {{ p_bulk_indexing_clients }},
    "benchmark_type": "large-shard-sizing",
    "version": 2
  },
  "schedule": [
    {
      "name": "deleteindex-elasticlogs-auto",
      "operation": {
        "operation-type": "delete-index",
        "index": "elasticlogs-auto"
      }
    },
    {
      "operation": "delete-index-template"
    },
    {
      "operation": {
        "operation-type": "create-index-template",
        "settings": {
          "index.number_of_shards": {{ shard_count | default(1) }}
        }
      }
    },
    {% for p_multiple in range(1, 13) %}
    {% set p_size = p_multiple * 25 %}
    {
      "name": "index-append-1000-auto-{{ p_size }}",
      "operation": {
        "operation-type": "bulk",
        "param-source": "elasticlogs_bulk",
        "index": "elasticlogs-auto",
        "bulk-size": 1000,
        "record_raw_event_size": {{p_record_raw_event_size}},
        "id_type": "auto"
      },
      "iterations": {{ p_ops_per_client }},
      "clients": {{ p_bulk_indexing_clients }},
      "meta": {
        "id_mode": "auto",
        "shard_size": {{ p_size }}
      }
    },
    {
      "name": "refresh-auto-{{ p_size }}",
      "operation": "refresh"
    },
    {
      "name": "indicesstats-elasticlogs-auto-{{ p_size }}",
      "operation": {
        "operation-type": "indicesstats",
        "index_pattern": "elasticlogs-auto"
      },
      "meta": {
        "id_mode": "auto",
        "shard_size": {{ p_size }}
      }
    },
    {
      "name": "fieldstats-elasticlogs-auto-{{ p_size }}",
      "operation": {
        "operation-type": "fieldstats",
        "index_pattern": "elasticlogs-auto"
      },
      "warmup-iterations": 1,
      "iterations": 1,
      "clients": {{ p_bulk_indexing_clients }}
    },
    {
      "name": "clear-caches-auto-{{ p_size }}",
      "operation": {
        "operation-type": "raw-request",
        "method": "POST",
        "path": "/_cache/clear"
      }
    },
    { 
      "name": "kibana-content_issues-50%-auto-{{ p_size }}",     
      "operation": {
        "operation-type": "kibana",
        "param-source": "elasticlogs_kibana",
        "debug": {{p_verbose}},
        "dashboard": "content_issues",
        "index_pattern": "elasticlogs-auto",
        "query_string": ["*"],
        "window_end": "START+50%,END",
        "window_length": "50%"
      },
      "iterations": {{ p_query_iterations }},
      "meta": {
        "id_mode": "auto",
        "shard_size": {{ p_size }}
      }
    },
    { 
      "name": "kibana-traffic-25%-auto-{{ p_size }}",     
      "operation": {
        "operation-type": "kibana",
        "param-source": "elasticlogs_kibana",
        "debug": {{p_verbose}},
        "dashboard": "traffic",
        "index_pattern": "elasticlogs-auto",
        "query_string": ["*"],
        "window_end": "START+25%,END",
        "window_length": "25%"
      },
      "iterations": {{ p_query_iterations }},
      "meta": {
        "id_mode": "auto",
        "shard_size": {{ p_size }}
      }
    },
    { 
      "name": "kibana-discover-50%-auto-{{ p_size }}",     
      "operation": {
        "operation-type": "kibana",
        "param-source": "elasticlogs_kibana",
        "debug": {{p_verbose}},
        "dashboard": "discover",
        "index_pattern": "elasticlogs-auto",
        "query_string": ["*"],
        "window_end": "START+50%,END",
        "window_length": "50%"
      },
      "iterations": {{ p_query_iterations }},
      "meta": {
        "id_mode": "auto",
        "shard_size": {{ p_size }}
      }
    },
    {% endfor %}
    {
      "name": "refresh-final",
      "operation": "refresh"
    }
  ]
},
{
  "name": "large-shard-id-type-evaluation",
  "description": "Index data into a number of ~25Gb single shard indices with different document ID types, then record index statistics to allow size and memory usage comparisons. IDs are based on UUIDs or autogenerated by Elasticsearch, meaning there are no conflicts.",
  "meta": {
    "client_count": {{ p_bulk_indexing_clients }},
    "benchmark_type": "large-shard-sizing",
    "version": 2
  },
  "schedule": [
    {% for id_type in ['auto', 'uuid', 'epoch_uuid', 'sha1', 'sha256', 'sha384', 'sha512'] %}
    {
      "name": "delete-index-elasticlogs-{{ id_type }}",
      "operation": {
        "operation-type": "delete-index",
        "index": "elasticlogs-{{ id_type }}"
      }
    },
    {
      "name": "delete-index-template-elasticlogs-{{ id_type }}",
      "operation": "delete-index-template"
    },
    {
      "name": "create-index-template-elasticlogs-{{ id_type }}",
      "operation": {
        "operation-type": "create-index-template",
        "settings": {
          "index.number_of_shards": {{ shard_count | default(1) }}
        }
      }
    },
    {
      "name": "index-append-1000-{{ id_type }}",
      "operation": {
        "operation-type": "bulk",
        "param-source": "elasticlogs_bulk",
        "index": "elasticlogs-{{ id_type }}",
        "bulk-size": 1000,
        "record_raw_event_size": {{p_record_raw_event_size}},
        "id_type": "{{ id_type }}"
      },
      "iterations": {{ p_ops_per_client }},
      "clients": {{ p_bulk_indexing_clients }},
      "meta": {
        "id_mode": "{{ id_type }}"
      }
    },
    {
      "name": "refresh-{{ id_type }}",
      "operation": "refresh"
    },
    {
      "name": "indicesstats-elasticlogs-{{ id_type }}",
      "operation": {
        "operation-type": "indicesstats",
        "index_pattern": "elasticlogs-{{ id_type }}"
      },
      "meta": {
        "id_mode": "{{ id_type }}"
      }
    },
    {% endfor %}  
    {
      "name": "refresh-final",
      "operation": "refresh"
    }
  ]
}

